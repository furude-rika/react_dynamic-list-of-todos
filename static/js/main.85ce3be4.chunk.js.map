{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api/api.js","App.jsx","index.js"],"names":["TodoList","setId","todos","filterByTitle","filterByStatus","className","type","name","placeholder","onChange","event","target","value","map","todo","key","id","classNames","TodoList__item","completed","checked","readOnly","title","onClick","userId","defaultProps","CurrentUser","state","user","this","props","getInfo","then","setState","prevProps","clearUserId","email","phone","React","Component","API_URL","getUserInfo","fetch","response","json","result","data","App","selectedUserId","isCompleted","setUserId","filteredByTitle","subtitle","filteredByStatus","status","filter","visibleTodos","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85ce3be4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './TodoList.scss';\n\nexport const TodoList = ({ setId, todos, filterByTitle, filterByStatus }) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <input\n      type=\"text\"\n      name=\"title\"\n      className=\"TodoList__input\"\n      placeholder=\"Enter the title\"\n      onChange={(event) => {\n        filterByTitle(event.target.value);\n      }}\n    />\n\n    <select\n      name=\"select\"\n      className=\"TodoList__select\"\n      onChange={(event) => {\n        filterByStatus(event.target.value);\n      }}\n    >\n      <option value=\"\">\n        All todos\n      </option>\n\n      <option value=\"completed\">\n        Complited todos\n      </option>\n\n      <option value=\"active\">\n        Active todos\n      </option>\n    </select>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            key={todo.id}\n            className={classNames({\n              TodoList__item: true,\n              'TodoList__item--unchecked': !todo.completed,\n              'TodoList__item--checked': todo.completed,\n            })}\n          >\n            <label>\n              <input type=\"checkbox\" checked={todo.completed} readOnly />\n              <p>{todo.title}</p>\n            </label>\n\n            <button\n              className=\"\n                TodoList__user-button\n                TodoList__user-button--selected\n                button\n              \"\n              type=\"button\"\n              onClick={() => {\n                setId(todo.userId);\n              }}\n            >\n              User&nbsp;#\n              {todo.userId}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      userId: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n  setId: PropTypes.func.isRequired,\n  filterByTitle: PropTypes.func.isRequired,\n  filterByStatus: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: '',\n  }\n\n  componentDidMount() {\n    this.props.getInfo(this.props.userId)\n      .then((user) => {\n        this.setState({ user });\n      });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId === this.props.userId) {\n      return;\n    }\n\n    this.props.getInfo(this.props.userId)\n      .then((user) => {\n        this.setState({ user });\n      });\n  }\n\n  render() {\n    const { userId, clearUserId } = this.props;\n    const { user } = this.state;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user: ${userId}`}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n        <button\n          type=\"button\"\n          className=\"CurrentUser__clear\"\n          onClick={() => {\n            this.setState({ user: '' });\n\n            clearUserId();\n          }}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  getInfo: PropTypes.func.isRequired,\n  clearUserId: PropTypes.func.isRequired,\n};\n","const API_URL = 'https://mate-api.herokuapp.com/';\n// https://mate-api.herokuapp.com/users/1\n\nexport const getTodos = () => fetch(`${API_URL}todos`)\n  .then(response => response.json())\n  .then(result => result.data)\n  .then(todos => todos.filter(todo => todo.title && todo.userId));\n\nexport const getUserInfo = userId => fetch(`${API_URL}users/${userId}`)\n  .then(response => response.json())\n  .then(result => result.data);\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos, getUserInfo } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    title: '',\n    isCompleted: '',\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todos) => {\n        this.setState({ todos });\n      });\n  }\n\n  setUserId = (id) => {\n    this.setState({ selectedUserId: id });\n  }\n\n  clearUserId = () => {\n    this.setState({ selectedUserId: '' });\n  }\n\n  filteredByTitle = (subtitle) => {\n    this.setState({ title: subtitle });\n  }\n\n  filteredByStatus = (status) => {\n    this.setState({ isCompleted: status });\n  }\n\n  render() {\n    const { todos, selectedUserId, title, isCompleted } = this.state;\n    let visibleTodos = todos.filter(todo => todo.title.includes(title));\n\n    if (isCompleted === 'completed') {\n      visibleTodos = visibleTodos.filter(todo => todo.completed === true);\n    }\n\n    if (isCompleted === 'active') {\n      visibleTodos = visibleTodos.filter(todo => todo.completed === false);\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={visibleTodos}\n            setId={this.setUserId}\n            filterByTitle={this.filteredByTitle}\n            filterByStatus={this.filteredByStatus}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                getInfo={getUserInfo}\n                clearUserId={this.clearUserId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}